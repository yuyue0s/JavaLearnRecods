public class MethodDetail { //方法细节
    public static void main(String[]args){
        //访问修饰符
        //访问修饰符（作用是控制 方法使用的范围）
        //有四种[public protected 默认 private]
        //如果不写就是默认访问

        //返回数据
        //细节1：一个方法最多有一个返回值[思考，如何返回多个结果返回数组]
        //细节2：返回类型可以为任意类型，包含基本类型或引用类型(数组，对象)
        //细节3：如果方法要求有返回数据类型，则方法体中最后的执行语句必须为return 值;
        //      而且要求 返回值类型 必须和 return 的值类型一致或兼容
        //细节4：如果方法是void，则方法体中可以没有return 语句，或者只写return;

        //形参列表
        //细节1：一个方法可以有0个参数，也可以有多个参数，中间用逗号隔开,比如 getSum(int n1,int n2)
        //细节2：参数类型可以为任意类型，包含基本类型或引用类型，比如 printArr(int[][] map)
        //细节3：调用带参数的方法时，一定对应着参数列表传入相同类型或兼容类型 的参数!(getsum)
        //细节4：方法定义时的参数称为形式参数，简称形参;方法调用时的传入参数称为实际参数，简称实参，
        //      实参和形参的类型要一致或兼容、个数、顺序必须一致

        //方法体
        //方法体里面写完成功能的具体的语句，可以为输入、输出、变量、运算、分支、循环、方法调用，
        //但里面不能再定义方法!即:方法不能嵌套定义。
        A a = new A();
        int arr[] = a.a(1,2);
        System.out.println(arr[0]);
        System.out.println(arr[1]);
    }
}
class A{
    public int[] a(int n1,int n2){
        int arr[] = new int[2];
        arr[0] = n1 + n2;
        arr[1] = n1 - n2;
        return arr;
    }
}
